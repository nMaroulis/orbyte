<script lang="ts">
  import { onMount } from 'svelte';
  import { goto } from '$app/navigation';
  import { user } from '$lib/stores/auth';
  import { api } from '$lib/api/client';
  import { API_ENDPOINTS } from '$lib/api/config';
  import type { WalletsResponse, CryptoWallet, FiatWallet } from '$lib/types/wallet';
  import Card from '$lib/components/ui/Card.svelte';
  import Button from '$lib/components/ui/Button.svelte';
  import { toast } from 'svelte-sonner';
  
  // Animations
  const animations = `
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-5px); }
      to { opacity: 1; transform: translateY(0); }
    }
    @keyframes pulse {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.03); }
    }
    .animate-fade-in {
      animation: fadeIn 0.3s ease-out forwards;
    }
    .card-hover {
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    .card-hover:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1);
    }
  `;
  
  // Initialize with some demo data
  onMount(() => {
    // Add a demo USD wallet if none exists
    if (fiatWallets.length === 0) {
      const demoWallet: FiatWallet = {
        id: 999, // Demo wallet ID
        bank_name: 'Demo Bank',
        account_number: '****1234',
        currency: 'USD',
        balance: 0,
        is_primary: true,
        iban: '',
        swift_bic: '',
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      };
      fiatWallets = [demoWallet];
    }
  });
  
  let loading = true;
  let activeTab: 'crypto' | 'fiat' = 'crypto';
  let cryptoWallets: CryptoWallet[] = [];
  let fiatWallets: FiatWallet[] = [];
  let error: string | null = null;
  let showCryptoConnect = false;
  let showFiatDeposit = false;
  let depositAmount = '';

  async function fetchWallets() {
    try {
      loading = true;
      error = null;
      
      // Fetch both wallets in parallel
      const [cryptoResponse, fiatResponse] = await Promise.all([
        api.get<{ data: CryptoWallet[] }>(API_ENDPOINTS.WALLETS.CRYPTO),
        api.get<{ data: FiatWallet[] }>(API_ENDPOINTS.WALLETS.FIAT)
      ]);
      
      cryptoWallets = Array.isArray(cryptoResponse?.data) ? cryptoResponse.data : [];
      fiatWallets = Array.isArray(fiatResponse?.data) ? fiatResponse.data : [];
      
    } catch (err) {
      console.error('Error fetching wallets:', err);
      error = 'Failed to load wallet data. Please try again later.';
      // Re-throw to ensure the error is caught by any parent error boundaries
      throw err;
    } finally {
      loading = false;
    }
  }

  function toggleCryptoConnect() {
    showCryptoConnect = !showCryptoConnect;
  }

  function toggleFiatDeposit() {
    showFiatDeposit = !showFiatDeposit;
  }

  async function connectWallet(provider: string) {
    // Simulate wallet connection
    toast.loading(`Connecting to ${provider}...`);
    await new Promise(resolve => setTimeout(resolve, 1000));
    toast.dismiss();
    toast.success('Please complete the connection in your wallet app');
  }

  async function addDemoFunds() {
    const loadingToastId = toast.loading('Adding demo funds...');
    try {
      // Simulate API call to add demo funds
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // Update local state
      const demoWallet = fiatWallets.find(w => w.currency === 'USD');
      if (demoWallet) {
        demoWallet.balance += 1000; // Add $1000 demo money
        fiatWallets = [...fiatWallets]; // Trigger Svelte reactivity
        toast.success('Added $1000 demo funds to your account', { id: loadingToastId });
      }
    } catch (error) {
      console.error('Error adding demo funds:', error);
      toast.error('Failed to add demo funds. Please try again.', { id: loadingToastId });
    }
  }

  async function processDeposit(method: string) {
    if (!depositAmount || isNaN(Number(depositAmount)) || Number(depositAmount) <= 0) {
      toast.error('Please enter a valid amount');
      return;
    }

    const loadingToastId = toast.loading(`Processing ${method} deposit...`);
    try {
      // Simulate API call for deposit
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // Update local state
      const usdWallet = fiatWallets.find(w => w.currency === 'USD');
      if (usdWallet) {
        const amount = Number(depositAmount);
        usdWallet.balance += amount;
        fiatWallets = [...fiatWallets]; // Trigger Svelte reactivity
        depositAmount = '';
        showFiatDeposit = false;
        toast.success(`Successfully deposited $${amount.toFixed(2)} via ${method}`, { id: loadingToastId });
      }
    } catch (error) {
      console.error(`Error processing ${method} deposit:`, error);
      toast.error(`Failed to process ${method} deposit. Please try again.`, { id: loadingToastId });
    }
  }

  function formatCurrency(amount: number, currency: string = 'USD'): string {
    return new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: currency,
      minimumFractionDigits: 2,
      maximumFractionDigits: 8
    }).format(amount);
  }

  onMount(() => {
    fetchWallets();
  });
</script>

<div class="min-h-screen bg-gray-50">
  <style>
    {animations}
    
    /* Custom scrollbar */
    ::-webkit-scrollbar {
      width: 8px;
      height: 8px;
    }
    ::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 4px;
    }
    ::-webkit-scrollbar-thumb {
      background: #c7d2fe;
      border-radius: 4px;
    }
    ::-webkit-scrollbar-thumb:hover {
      background: #a5b4fc;
    }
  </style>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-10 gap-4">
      <div>
        <h1 class="text-4xl font-bold text-gray-900 bg-clip-text text-transparent bg-gradient-to-r from-indigo-600 to-blue-600">My Wallets</h1>
        <p class="mt-2 text-gray-600">Manage your crypto and fiat wallets in one place</p>
      </div>
      <div class="flex space-x-3">
        <Button 
          variant="primary" 
          on:click={() => activeTab = 'crypto'}
          class="group flex items-center space-x-2 px-5 py-2.5 rounded-xl bg-gradient-to-r from-indigo-600 to-blue-600 hover:from-indigo-700 hover:to-blue-700 text-white font-medium shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-0.5"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 group-hover:scale-110 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
          </svg>
          <span>Add Crypto</span>
        </Button>
        <Button 
          variant="secondary" 
          on:click={() => activeTab = 'fiat'}
          class="group flex items-center space-x-2 px-5 py-2.5 rounded-xl bg-white border-2 border-indigo-100 hover:border-indigo-200 text-indigo-700 font-medium shadow-md hover:shadow-lg transition-all duration-300 transform hover:-translate-y-0.5"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 group-hover:scale-110 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
          </svg>
          <span>Add Bank</span>
        </Button>
      </div>
    </div>

    <!-- Tabs -->
    <div class="mb-10 bg-white rounded-xl p-1 shadow-sm border border-gray-100 max-w-md">
      <nav class="flex rounded-lg bg-gray-50 p-1">
        <button
          class={`flex-1 py-3 px-4 rounded-lg text-sm font-medium transition-all duration-200 ${activeTab === 'crypto' 
            ? 'bg-white text-indigo-700 shadow-sm' 
            : 'text-gray-500 hover:text-indigo-600 hover:bg-indigo-50'}`}
          on:click={() => (activeTab = 'crypto')}
        >
          <div class="flex items-center justify-center space-x-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <span>Crypto Wallets</span>
            {#if cryptoWallets.length > 0}
              <span class="bg-indigo-100 text-indigo-800 text-xs font-medium px-2 py-0.5 rounded-full">
                {cryptoWallets.length}
              </span>
            {/if}
          </div>
        </button>
        <button
          class={`flex-1 py-3 px-4 rounded-lg text-sm font-medium transition-all duration-200 ${activeTab === 'fiat' 
            ? 'bg-white text-indigo-700 shadow-sm' 
            : 'text-gray-500 hover:text-indigo-600 hover:bg-indigo-50'}`}
          on:click={() => (activeTab = 'fiat')}
        >
          <div class="flex items-center justify-center space-x-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3" />
            </svg>
            <span>Bank Accounts</span>
            {#if fiatWallets.length > 0}
              <span class="bg-indigo-100 text-indigo-800 text-xs font-medium px-2 py-0.5 rounded-full">
                {fiatWallets.length}
              </span>
            {/if}
            {#if activeTab === 'fiat'}
              {#if showFiatDeposit}
                <div class="mt-6 bg-white p-6 rounded-xl shadow-sm border border-gray-100">
                  <h4 class="text-sm font-medium text-gray-500 mb-4">Add funds to your account</h4>
                  <div class="space-y-4">
                    <div>
                      <label for="deposit-amount" class="block text-sm font-medium text-gray-700 mb-1.5">Amount (USD)</label>
                      <div class="relative rounded-lg shadow-sm">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                          <span class="text-gray-500 sm:text-sm">$</span>
                        </div>
                        <input
                          type="number"
                          id="deposit-amount"
                          bind:value={depositAmount}
                          placeholder="0.00"
                          class="focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-7 pr-12 py-3 sm:text-sm border-gray-300 rounded-lg"
                          min="1"
                          step="0.01"
                        />
                        <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                          <span class="text-gray-500 sm:text-sm">USD</span>
                        </div>
                      </div>
                    </div>
                    
                    <button 
                      on:click={() => processDeposit('Credit/Debit Card')}
                      class="w-full flex items-center justify-between p-3.5 rounded-xl hover:bg-gray-50 border border-gray-200 transition-all duration-200 hover:border-indigo-300 hover:shadow-sm"
                    >
                      <div class="flex items-center">
                        <svg class="h-6 w-6 text-gray-500 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" />
                        </svg>
                        <span>Credit/Debit Card</span>
                      </div>
                      <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                      </svg>
                    </button>
                    
                    <button 
                      on:click={() => processDeposit('Apple Pay')}
                      class="w-full flex items-center justify-between p-3.5 rounded-xl hover:bg-gray-50 border border-gray-200 transition-all duration-200 hover:border-indigo-300 hover:shadow-sm"
                    >
                      <div class="flex items-center">
                        <svg class="h-6 w-6 text-black mr-3" viewBox="0 0 24 24" fill="currentColor">
                          <path d="M22.5 18.5c0-1.1-.9-2-2-2h-6.5c-1.1 0-2 .9-2 2s.9 2 2 2h6.5c1.1 0 2-.9 2-2z"/>
                          <path d="M22.5 12c0-1.1-.9-2-2-2h-6.5c-1.1 0-2 .9-2 2s.9 2 2 2h6.5c1.1 0 2-.9 2-2z"/>
                          <path d="M22.5 5.5c0-1.1-.9-2-2-2h-6.5c-1.1 0-2 .9-2 2s.9 2 2 2h6.5c1.1 0 2-.9 2-2z"/>
                          <path d="M9.5 18.5c0-1.1-.9-2-2-2h-6c-1.1 0-2 .9-2 2s.9 2 2 2h6c1.1 0 2-.9 2-2z"/>
                          <path d="M9.5 12c0-1.1-.9-2-2-2h-6c-1.1 0-2 .9-2 2s.9 2 2 2h6c1.1 0 2-.9 2-2z"/>
                          <path d="M9.5 5.5c0-1.1-.9-2-2-2h-6c-1.1 0-2 .9-2 2s.9 2 2 2h6c1.1 0 2-.9 2-2z"/>
                        </svg>
                        <span>Apple Pay</span>
                      </div>
                      <svg class="h-5 w-5 text-gray-400 transition-transform group-hover:translate-x-0.5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                      </svg>
                    </button>
                    
                    <button 
                      on:click={() => processDeposit('Bank Transfer')}
                      class="group w-full flex items-center justify-between p-4 rounded-xl hover:bg-gray-50 border border-gray-200 transition-all duration-200 hover:border-indigo-300 hover:shadow-sm"
                    >
                      <div class="flex items-center">
                        <div class="p-1.5 rounded-lg bg-blue-50 mr-3">
                          <svg class="h-5 w-5 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3" />
                          </svg>
                        </div>
                        <span class="font-medium text-gray-800">Bank Transfer</span>
                      </div>
                      <svg class="h-5 w-5 text-gray-400 transition-transform group-hover:translate-x-0.5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                      </svg>
                    </button>
                  </div>
                </div>
              {/if}

              {#if !showFiatDeposit}
                <!-- Empty State for Fiat Wallets -->
                <div class="bg-white rounded-2xl shadow-lg p-8 text-center col-span-3 border border-gray-100 transform transition-all hover:shadow-xl">
                  <div class="w-20 h-20 bg-indigo-50 rounded-full flex items-center justify-center mx-auto mb-4">
                    <svg class="h-10 w-10 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3" />
                    </svg>
                  </div>
                  <h3 class="text-lg font-semibold text-gray-900">No bank accounts</h3>
                  <p class="mt-2 text-gray-500 max-w-md mx-auto">Connect your bank account to start managing your fiat currencies</p>
                  
                  <div class="mt-8 space-y-3 max-w-sm mx-auto">
                    <button
                      on:click={toggleFiatDeposit}
                      class="group w-full flex items-center justify-center px-6 py-3.5 border border-transparent text-base font-medium rounded-xl text-white bg-gradient-to-r from-indigo-600 to-blue-600 hover:from-indigo-700 hover:to-blue-700 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-0.5"
                    >
                      <svg class="-ml-1 mr-3 h-5 w-5 group-hover:scale-110 transition-transform" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
                      </svg>
                      Add Bank Account
                    </button>
                    <button
                      on:click={addDemoFunds}
                      class="group w-full flex items-center justify-center px-6 py-3.5 border-2 border-indigo-100 text-base font-medium rounded-xl text-indigo-700 bg-white hover:bg-indigo-50 shadow-md hover:shadow-lg transition-all duration-300 transform hover:-translate-y-0.5"
                    >
                      <svg class="-ml-1 mr-3 h-5 w-5 text-indigo-500 group-hover:scale-110 transition-transform" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                      Add Demo Funds
                    </button>
                  </div>
                </div>
              {/if}
            {/if}
          </div>
        </div>
      </div>
    </div>
  </div>

<style>
  /* Smooth scrolling for the entire page */
  html {
    scroll-behavior: smooth;
  }
  
  /* Better focus states for better accessibility */
  button:focus, input:focus, select:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.3);
    transition: box-shadow 0.2s ease-in-out;
  }
  
  /* Smooth transitions for interactive elements */
  button, a, input, select {
    transition: all 0.2s ease-in-out;
  }
  
  /* Better hover states for cards */
  .card {
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }
  
  .card:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1);
  }
</style>
